<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title> عيد الأضحى تهنئة</title>

<link href="https://fonts.googleapis.com/css2?family=Cairo:wght@700&display=swap" rel="stylesheet">

<style>
  body, html {
    margin: 0; padding: 0; overflow: hidden;
    background: linear-gradient(270deg, #121212, #2e2e2e, #121212);
    height: 100vh;
    font-family: 'Cairo', sans-serif;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    user-select: none;
    animation: none; /* إيقاف حركة الخلفية على الموبايل */
    transition: background 2s ease;
  }
  @media (min-width: 769px) {
    body, html {
      animation: bgGradient 20s linear infinite;
    }
  }
  @keyframes bgGradient {
    0% {background-position: 0% 50%;}
    50% {background-position: 100% 50%;}
    100% {background-position: 0% 50%;}
  }

  canvas {
    position: fixed;
    top: 0; left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: 1;
  }

  .message {
    position: relative;
    z-index: 5;
    font-size: 3.5rem;
    font-weight: 700;
    text-align: center;
    text-shadow:
      0 0 8px #ffd700,
      0 0 15px #ffb800;
    animation: glow 2.5s ease-in-out infinite alternate,
               floatUpDown 3s ease-in-out infinite;
    margin-bottom: 1rem;
    cursor: default;
  }
  .message:hover {
    text-shadow:
      0 0 10px #ffea00,
      0 0 20px #ffe000;
    transform: scale(1.05);
    transition: all 0.3s ease;
  }
  @keyframes glow {
    from {
      text-shadow:
        0 0 6px #ffd700,
        0 0 12px #ffb800;
    }
    to {
      text-shadow:
        0 0 12px #ffd700,
        0 0 20px #ffb800;
    }
  }
  @keyframes floatUpDown {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-12px);
    }
  }

  .submessage {
    position: relative;
    z-index: 5;
    font-size: 1.5rem;
    color: #ffd700cc;
    font-weight: 600;
    text-shadow: 0 0 8px #ffd700cc;
    animation: floatUpDown 3s ease-in-out infinite;
    margin-bottom: 20px;
  }

  .timer {
    position: relative;
    z-index: 5;
    font-size: 1.8rem;
    color: #ffd700;
    font-weight: 600;
    text-shadow: 0 0 8px #ffd700cc;
    animation: glow 2.5s ease-in-out infinite alternate,
               floatUpDown 3s ease-in-out infinite;
    margin-bottom: 20px;
    text-align: center;
    cursor: default;
  }
  .timer:hover {
    text-shadow:
      0 0 10px #ffea00,
      0 0 20px #ffe000;
    transform: scale(1.05);
    transition: all 0.3s ease;
  }
  #countdown {
    font-family: monospace;
    color: #fff;
    text-shadow: 0 0 8px #ffffffcc;
  }

  footer {
    position: fixed;
    bottom: 8px;
    width: 100%;
    text-align: center;
    font-size: 0.9rem;
    color: #aaa;
    font-family: monospace;
    z-index: 10;
    user-select: none;
  }

  #audioControl, #shareBtn, #colorToggleBtn {
    position: fixed;
    right: 12px;
    background: #222;
    border: none;
    border-radius: 20px;
    padding: 8px 15px;
    color: #ffd700;
    font-weight: 700;
    cursor: pointer;
    z-index: 10;
    box-shadow: 0 0 10px #ffd700aa;
    transition: background 0.3s ease, transform 0.3s ease;
    user-select: none;
    font-family: 'Cairo', sans-serif;
  }
  #audioControl:hover, #shareBtn:hover, #colorToggleBtn:hover {
    background: #444;
    transform: scale(1.05);
  }
  #audioControl {
    top: 12px;
  }
  #shareBtn {
    top: 60px;
  }
  #colorToggleBtn {
    top: 108px;
  }

  .sparkle {
    position: absolute;
    background: radial-gradient(circle, #ffd700 0%, transparent 70%);
    border-radius: 50%;
    pointer-events: none;
    filter: drop-shadow(0 0 3px #ffd700);
    animation: sparkleAnim 2s linear infinite;
  }
  @keyframes sparkleAnim {
    0%, 100% {
      opacity: 0.9;
      transform: scale(1);
    }
    50% {
      opacity: 0.1;
      transform: scale(0.6);
    }
  }
</style>
</head>
<body>

<div class="message" id="message">✨ كل عام وأنتم بخير ✨</div>
<div class="submessage">بمناسبة عيد الأضحى المبارك 🌙</div>
<div class="timer" id="timer">الوقت المتبقي لعيد الأضحى: <span id="countdown">...</span></div>

<canvas id="canvas"></canvas>

<button id="audioControl" title="تشغيل/إيقاف الصوت">تشغيل الصوت 🔊</button>
<button id="shareBtn" title="شارك التهنئة">مشاركة 🎉</button>
<button id="colorToggleBtn" title="تغيير لون الخلفية">تغيير لون الخلفية 🎨</button>

<audio id="audio" loop playsinline>
  <source src="https://j.top4top.io/m_3433052mw1.mp3" type="audio/mpeg" />
  متصفحك لا يدعم تشغيل الصوت.
</audio>

<footer>Dev Mohammad Salem</footer>

<script>
const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');
let cw, ch;

function resize() {
  cw = canvas.width = window.innerWidth;
  ch = canvas.height = window.innerHeight;
}
window.addEventListener('resize', resize);
resize();

const isMobile = window.innerWidth <= 768;

class Particle {
  constructor() {
    this.reset();
  }
  reset() {
    this.x = Math.random() * cw;
    this.y = ch + Math.random() * 100;
    this.size = Math.random() * 3 + 1;
    this.speedY = Math.random() * 0.5 + 0.2;
    this.speedX = (Math.random() - 0.5) * 0.3;
    this.opacity = Math.random() * 0.5 + 0.3;
    this.color = `rgba(255, 215, 0, ${this.opacity})`;
  }
  update() {
    this.y -= this.speedY;
    this.x += this.speedX;
    this.opacity -= 0.001;
    if (this.y < -10 || this.opacity <= 0) this.reset();
  }
  draw() {
    ctx.beginPath();
    const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size*3);
    gradient.addColorStop(0, `rgba(255, 223, 0, ${this.opacity})`);
    gradient.addColorStop(1, 'rgba(255, 223, 0, 0)');
    ctx.fillStyle = gradient;
    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
    ctx.fill();
  }
}

const particles = [];
const maxParticles = isMobile ? 50 : 90;
for (let i = 0; i < maxParticles; i++) particles.push(new Particle());

class Bubble {
  constructor() {
    this.reset();
  }
  reset() {
    this.x = Math.random() * cw;
    this.y = ch + Math.random() * 100;
    this.radius = Math.random() * 6 + 2;
    this.speedY = Math.random() * 0.3 + 0.1;
    this.opacity = Math.random() * 0.2 + 0.1;
  }
  update() {
    this.y -= this.speedY;
    if(this.y < -this.radius) this.reset();
  }
  draw() {
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);
    ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;
    ctx.fill();
  }
}

const bubbles = [];
const maxBubbles = isMobile ? 30 : 60;
for(let i=0; i < maxBubbles; i++) bubbles.push(new Bubble());

class Star {
  constructor() {
    this.reset();
  }
  reset() {
    this.x = Math.random() * cw;
    this.y = Math.random() * ch * 0.5;
    this.size = Math.random() * 1.5 + 0.5;
    this.opacity = Math.random();
    this.opacitySpeed = (Math.random()*0.005) + 0.002;
  }
  update() {
    this.opacity += this.opacitySpeed;
    if(this.opacity > 1 || this.opacity < 0.2) this.opacitySpeed *= -1;
  }
  draw() {
    ctx.beginPath();
    ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;
    ctx.arc(this.x, this.y, this.size, 0, Math.PI*2);
    ctx.fill();
  }
}

const stars = [];
const maxStars = isMobile ? 20 : 40;
for(let i=0; i < maxStars; i++) stars.push(new Star());

class Crescent {
  constructor() {
    this.x = cw * 0.15;
    this.y = ch * 0.25;
    this.size = 60;
    this.angle = 0;
    this.speed = 0.01;
  }
  update() {
    this.angle += this.speed;
    if(this.angle > Math.PI*2) this.angle -= Math.PI*2;
  }
  draw() {
    ctx.save();
    ctx.translate(this.x, this.y);
    ctx.rotate(this.angle);
    ctx.fillStyle = '#FFD700';
    ctx.beginPath();
    ctx.arc(0, 0, this.size, 0, Math.PI * 2);
    ctx.fill();

    ctx.globalCompositeOperation = 'destination-out';
    ctx.beginPath();
    ctx.arc(this.size/3, 0, this.size * 0.7, 0, Math.PI * 2);
    ctx.fill();
    ctx.globalCompositeOperation = 'source-over';

    ctx.restore();
  }
}

const crescent = new Crescent();

let lastFrame = 0;
function animate(timestamp) {
  if (isMobile && timestamp - lastFrame < 33) {
    requestAnimationFrame(animate);
    return;
  }
  lastFrame = timestamp;
  ctx.clearRect(0, 0, cw, ch);
  particles.forEach(p => {
    p.update();
    p.draw();
  });
  bubbles.forEach(b => {
    b.update();
    b.draw();
  });
  stars.forEach(s => {
    s.update();
    s.draw();
  });
  crescent.update();
  crescent.draw();
  requestAnimationFrame(animate);
}
animate();

const messageEl = document.getElementById('message');
const timerEl = document.getElementById('timer');
const sparkleInterval = isMobile ? 600 : 400;

function createSparkle() {
  const sparkle = document.createElement('div');
  sparkle.classList.add('sparkle');
  const size = Math.random()*5 + 3;
  sparkle.style.width = sparkle.style.height = `${size}px`;
  sparkle.style.top = `${Math.random()*messageEl.clientHeight}px`;
  sparkle.style.left = `${Math.random()*messageEl.clientWidth}px`;
  messageEl.appendChild(sparkle);

  setTimeout(() => {
    sparkle.remove();
  }, 1800);
}

function createTimerSparkle() {
  const sparkle = document.createElement('div');
  sparkle.classList.add('sparkle');
  const size = Math.random() * 5 + 3;
  sparkle.style.width = sparkle.style.height = `${size}px`;
  sparkle.style.top = `${Math.random() * timerEl.clientHeight}px`;
  sparkle.style.left = `${Math.random() * timerEl.clientWidth}px`;
  timerEl.appendChild(sparkle);

  setTimeout(() => {
    sparkle.remove();
  }, 1800);
}

setInterval(createSparkle, sparkleInterval);
setInterval(createTimerSparkle, sparkleInterval);

const audio = document.getElementById('audio');
const audioControl = document.getElementById('audioControl');
audio.volume = 0.4;

audioControl.addEventListener('click', () => {
  if (audio.paused) {
    audio.muted = false;
    audio.play();
    audioControl.textContent = 'إيقاف الصوت 🔊';
  } else {
    audio.muted = true;
    audio.pause();
    audioControl.textContent = 'تشغيل الصوت 🔊';
  }
});

const shareBtn = document.getElementById('shareBtn');
shareBtn.addEventListener('click', () => {
  if(navigator.share){
    navigator.share({
      title: 'عيد الأضحى',
      text: 'كل عام وأنتم بخير بمناسبة عيد الأضحى المبارك!',
      url: window.location.href
    }).catch(err => console.log('خطأ في المشاركة:', err));
  } else {
    alert('متصفحك لا يدعم خاصية المشاركة.');
  }
});

const colorToggleBtn = document.getElementById('colorToggleBtn');
const colors = [
  'linear-gradient(270deg, #121212, #2e2e2e, #121212)',
  'linear-gradient(270deg, #2e003e, #6a0dad, #2e003e)',
  'linear-gradient(270deg, #031927, #00587a, #031927)',
  'linear-gradient(270deg, #1e2a78, #4b6cb7, #1e2a78)',
  'linear-gradient(270deg, #1a1a1a, #444, #1a1a1a)'
];
let currentColor = 0;

colorToggleBtn.addEventListener('click', () => {
  currentColor++;
  if(currentColor >= colors.length) currentColor = 0;
  document.body.style.background = colors[currentColor];
});

const countdownEl = document.getElementById('countdown');
const eidDate = new Date('2025-06-06T00:00:00+03:00');

function updateCountdown() {
  const now = new Date();
  const timeDiff = eidDate - now;

  if (timeDiff <= 0) {
    countdownEl.textContent = 'عيد الأضحى اليوم! 🎉';
    return;
  }

  const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
  const hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));
  const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);

  countdownEl.textContent = `${days} يوم ${hours} ساعة ${minutes} دقيقة ${seconds} ثانية`;
}

updateCountdown();
setInterval(updateCountdown, 1000);
</script>

</body>
</html>
